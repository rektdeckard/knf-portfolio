{"version":3,"sources":["api/instagram.ts","components/News/NewsEventList.tsx","components/News/News.tsx"],"names":["axios","create","baseURL","params","fields","join","access_token","MediaType","DatesList","styled","ul","Date","li","Year","h3","EventsList","Event","EventTitle","p","EventLink","a","ExpanderLink","small","NewsEventList","events","useState","expanded","setExpanded","slice","map","year","title","location","url","href","length","onClick","e","NewsContainer","div","SectionHeading","h2","SectionContainer","RecentPosts","NewsLink","PostContainer","Post","img","Columns","count","News","posts","setPosts","setActiveSection","useSetRecoilState","activeSectionAtom","useEffect","fetchPosts","Instagram","get","data","filter","media_type","VIDEO","console","log","window","scrollTo","top","behavior","name","color","accent","time","intersectionRatio","permalink","target","rel","caption","src","media_url","id","Loader","delay","type","press","soloExhibitions","groupExhibitions","selectedExhibitions"],"mappings":"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","file":"static/js/5.395894df.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst INSTAGRAM_ACCESS_TOKEN =\r\n  \"IGQVJXUUk4NmVRaDFhWUhBTDE5V2N4SXYtcTY4WUEtUUxFaFlmLWFaVkFjR2ljUFEyUGZASb0hKTFFKV2hCYlVrRjJlNVdMc0FTTHVERTlMcEF2MmlNR0pzQ2VGUE9sc0JPQ0FhcW5NdXVjWnRPaG94eAZDZD\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://graph.instagram.com/me/media\",\r\n  params: {\r\n    fields: [\"id\", \"caption\", \"media_type\", \"media_url\", \"permalink\"].join(\",\"),\r\n    access_token: INSTAGRAM_ACCESS_TOKEN,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { NewsEvents } from \"../../data\";\r\n\r\ninterface NewsEventListProps {\r\n  events: NewsEvents[];\r\n}\r\n\r\nconst DatesList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst Date = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 72px 1fr;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Year = styled.h3`\r\n  margin: 0;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst EventsList = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nconst Event = styled.li`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst EventTitle = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nconst EventLink = styled.a`\r\n  display: block;\r\n`;\r\n\r\nconst ExpanderLink = styled.small`\r\n  margin: 16px 0;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst NewsEventList: React.FC<NewsEventListProps> = ({ events }) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <DatesList>\r\n        {(expanded ? events : events.slice(0, 6)).map(({ year, events }) => (\r\n          <Date>\r\n            <Year>{year}</Year>\r\n            <EventsList>\r\n              {events.map(({ title, location, url }) => (\r\n                <Event>\r\n                  {url ? (\r\n                    <EventLink href={url}>{title}</EventLink>\r\n                  ) : (\r\n                    <EventTitle>{title}</EventTitle>\r\n                  )}\r\n                  <small>{location}</small>\r\n                </Event>\r\n              ))}\r\n            </EventsList>\r\n          </Date>\r\n        ))}\r\n      </DatesList>\r\n      {events.length > 6 && (\r\n        <ExpanderLink onClick={() => setExpanded((e) => !e)}>\r\n          {expanded ? \"Show less\" : \"Show more\"}\r\n        </ExpanderLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsEventList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nimport { Instagram } from \"../../api\";\r\nimport { activeSectionAtom } from \"../../state\";\r\nimport {\r\n  soloExhibitions,\r\n  groupExhibitions,\r\n  selectedExhibitions,\r\n  press,\r\n} from \"../../data\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport NewsEventList from \"./NewsEventList\";\r\n\r\nenum MediaType {\r\n  IMAGE = \"IMAGE\",\r\n  VIDEO = \"VIDEO\",\r\n  CAROUSEL_ALBUM = \"CAROUSEL_ALBUM\",\r\n}\r\n\r\ninterface InstagramPost {\r\n  id: string;\r\n  caption: string;\r\n  media_type: MediaType;\r\n  media_url: string;\r\n  permalink: string;\r\n}\r\n\r\nconst NewsContainer = styled.div`\r\n  min-height: 100vh;\r\n  max-width: 956px;\r\n  margin: 0 auto;\r\n  padding: 72px 0;\r\n`;\r\n\r\nconst SectionHeading = styled.h2`\r\n  font-weight: 400;\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n  margin-bottom: 96px;\r\n`;\r\n\r\nconst RecentPosts = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 300px;\r\n  gap: 24px;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nconst NewsLink = styled.a`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst PostContainer = styled.a``;\r\n\r\nconst Post = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Columns = styled.div<{ count?: number }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${({ count }) => count ?? 1}, 1fr);\r\n  gap: 132px;\r\n  margin-bottom: 96px;\r\n`;\r\n\r\nconst News: React.FC<{}> = () => {\r\n  const [posts, setPosts] = useState<InstagramPost[]>([]);\r\n  const setActiveSection = useSetRecoilState(activeSectionAtom);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const {\r\n          data: { data },\r\n        } = await Instagram.get<{ data: InstagramPost[] }>(\"\");\r\n        setPosts(\r\n          data.filter((p) => p.media_type !== MediaType.VIDEO).slice(0, 3)\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    setActiveSection({\r\n      name: \"news\",\r\n      color: \"#25436d\",\r\n      accent: \"\",\r\n      time: 0,\r\n      intersectionRatio: 1,\r\n    });\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <NewsContainer>\r\n      <SectionContainer>\r\n        <SectionHeading>Latest from Instagram</SectionHeading>\r\n        <RecentPosts>\r\n          {posts.length ? (\r\n            posts.map((p) => (\r\n              <PostContainer\r\n                key={p.id}\r\n                href={p.permalink}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                title={p.caption}\r\n              >\r\n                <Post src={p.media_url} />\r\n              </PostContainer>\r\n            ))\r\n          ) : (\r\n            <>\r\n              <Loader />\r\n              <Loader delay={0.1} type=\"ladder\" />\r\n              <Loader delay={0.2} type=\"curlies\" />\r\n            </>\r\n          )}\r\n        </RecentPosts>\r\n        <NewsLink href=\"https://instagram.com/karennielsenfried\">\r\n          <small>See more</small>\r\n        </NewsLink>\r\n      </SectionContainer>\r\n      <Columns count={1}>\r\n        <div>\r\n          <SectionHeading>Press</SectionHeading>\r\n          <NewsEventList events={press} />\r\n        </div>\r\n      </Columns>\r\n      <Columns count={2}>\r\n        <div>\r\n          <SectionHeading>Solo Exhibitions</SectionHeading>\r\n          <NewsEventList events={soloExhibitions} />\r\n        </div>\r\n        <div>\r\n          <SectionHeading>Group Exhibitions</SectionHeading>\r\n          <NewsEventList events={groupExhibitions} />\r\n        </div>\r\n      </Columns>\r\n      <Columns count={1}>\r\n        <div>\r\n          <SectionHeading>Selected Exhibitions</SectionHeading>\r\n          <NewsEventList events={selectedExhibitions} />\r\n          {/* <div style={{ height: 1000, backgroundColor: \"#FFFFFF40 \" }} /> */}\r\n        </div>\r\n      </Columns>\r\n    </NewsContainer>\r\n  );\r\n};\r\n\r\nexport default News;\r\n"],"sourceRoot":""}