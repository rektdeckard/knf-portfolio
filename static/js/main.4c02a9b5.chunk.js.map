{"version":3,"sources":["components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["FullBleedCentered","styled","div","props","color","VoucherContent","App","useWindupString","pace","char","text","skip","rewind","isFinished","width","height","viewBox","fill","xmlns","onClick","x","y","rx","stroke","strokeWidth","strokeLinejoin","strokeDasharray","attributeName","from","to","dur","repeatCount","style","href","fontSize","maxWidth","textAlign","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"urBAIA,IAAMA,EAAoBC,IAAOC,IAAV,KAKZ,SAACC,GAAD,OAAWA,EAAMC,SAQtBC,EAAiBJ,IAAOC,IAAV,KA4ELI,EAjEW,WAAO,IAAD,EAI1BC,YACF,mFACA,CAAEC,KAAM,SAACC,GAAD,MAAoB,MAATA,EAAe,IAAM,MANZ,mBAE5BC,EAF4B,YAG1BC,EAH0B,EAG1BA,KAAMC,EAHoB,EAGpBA,OAAQC,EAHY,EAGZA,WAMlB,OACE,cAACb,EAAD,CAAmBI,MAAM,UAAzB,SACE,sBACEU,MAAM,MACNC,OAAO,MACPC,QAAQ,cACRC,KAAK,OACLC,MAAM,6BACNC,QAASN,EAAaD,EAASD,EANjC,UAQE,uBACES,EAAG,EACHC,EAAG,EACHP,MAAO,IACPC,OAAQ,IACRO,GAAI,GACJC,OAAO,eACPC,YAAa,EACbC,eAAe,QACfC,gBAAgB,QATlB,UAWE,yBACEC,cAAc,oBACdC,KAAK,MACLC,GAAG,OACHC,IAAI,SACJC,YAAY,eAEd,+BAAehB,OAAQ,IAAKD,MAAO,IAAKM,EAAG,EAAGC,EAAG,EAAjD,SACE,qBAAKW,MAAO,CAAE5B,MAAO,SAArB,8BAGJ,+BAAegB,EAAG,EAAGC,EAAG,EAAGP,MAAO,IAAKC,OAAQ,IAA/C,SAEE,eAACV,EAAD,CAAgBa,MAAM,+BAAtB,+BACqB,IACnB,mBAAGe,KAAK,gCAAR,SACE,6DAEF,uBACA,mBACED,MAAO,CACLE,SAAU,GACVC,SAAU,MACVC,UAAW,SACXC,UAAW,IALf,SAQG3B,eCvEA4B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c02a9b5.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { useWindupString } from \"windups\";\nimport \"./App.css\";\n\nconst FullBleedCentered = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n  place-items: center;\n  color: ${(props) => props.color};\n\n  & a {\n    color: inherit;\n    font-size: 40px;\n  }\n`;\n\nconst VoucherContent = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 32px;\n  font-family: monospace;\n`;\n\nconst App: React.FC<{}> = () => {\n  const [\n    text,\n    { skip, rewind, isFinished },\n  ] = useWindupString(\n    \"This voucher good for one (1) hand-crafted portfolio website by Toby and Helena.\",\n    { pace: (char) => (char === \" \" ? 120 : 40) }\n  );\n\n  return (\n    <FullBleedCentered color=\"#DD8888\">\n      <svg\n        width=\"810\"\n        height=\"610\"\n        viewBox=\"0 0 810 610\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        onClick={isFinished ? rewind : skip}\n      >\n        <rect\n          x={5}\n          y={5}\n          width={800}\n          height={600}\n          rx={56}\n          stroke=\"currentColor\"\n          strokeWidth={5}\n          strokeLinejoin=\"round\"\n          strokeDasharray=\"20 10\"\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"-10\"\n            to=\"-100\"\n            dur=\"1500ms\"\n            repeatCount=\"indefinite\"\n          />\n          <foreignObject height={600} width={800} x={0} y={0}>\n            <div style={{ color: \"white\" }}>Hello World</div>\n          </foreignObject>\n        </rect>\n        <foreignObject x={5} y={5} width={800} height={600}>\n          {/* @ts-ignore */}\n          <VoucherContent xmlns=\"http://www.w3.org/1999/xhtml\">\n            The future site of{\" \"}\n            <a href=\"https://karennielsenfried.com\">\n              <strong>karennielsenfried.com</strong>\n            </a>\n            <br />\n            <p\n              style={{\n                fontSize: 16,\n                maxWidth: \"50%\",\n                textAlign: \"center\",\n                minHeight: 38,\n              }}\n            >\n              {text}\n            </p>\n          </VoucherContent>\n        </foreignObject>\n      </svg>\n    </FullBleedCentered>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}